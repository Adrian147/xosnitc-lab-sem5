// Calculating the Physical SP address
alias physicalSP S0;
physicalSP = ([PTBR + 2 * (SP / 512)] * 512) + (SP % 512);

// Extracting System Call Number
alias sysCallNo S1;
sysCallNo = [physicalSP - 1];

//Identifying the System call
if ( sysCallNo == 1) then
	//Create syscall
	alias fileName S3;
	fileName = [physicalSP - 3];
	
	//checking FAT for the filename #need to test
	alias i S4;
	i = 0;
	while (i < 64) do
        if ([FAT + 8 * i] == fileName) then
            //modify
            [physicalSP - 2] = 0;
            ireturn;
        endif;
        
        i = i + 1;
    endwhile;
    
    //Checking the DFS for an empty block
    alias freeb S5;
    freeb = -1;
    i = 24;
    while (i < 448) do
        if ([DISK_LIST + i] == 0) then
            freeb = i;
            break;
        endif;
        
        i = i + 1;
    endwhile;
    
    if (freeb == -1) then
        //need to change
        [physicalSP - 2] = -1;
        ireturn;
    endif;
    
    //Search FAT for a Free Entry
    alias free_fat S6;
    free_fat = -1;
    
    i = 0;
	while (i < 64) do
        if ([FAT + 8 * i + 2] == -1) then
            free_fat = i;
            break;
        endif;
        
        i = i + 1;
    endwhile;
    
    //If FAT entry is not found
    if (free_fat == -1) then
        //need to change
        [physicalSP - 2] = -1;
        ireturn;
    endif;
    
    //Setting FAT entry
    [FAT + 8 * free_fat + 0] = fileName;
    [FAT + 8 * free_fat + 1] = 0;
    [FAT + 8 * free_fat + 2] = freeb;
    
    //Loading the basic block to the scratchpad
    load (1, freeb);
    
    //Setting all words to  -1
    i = 0;
	while (i < 512) do
	    [SCRATCHPAD + i] = -1;
	    
	    i = i + 1;
	endwhile;
	
    //Storing the basic block back
	store (1, freeb);
	
	// Setting DFL for the basic block
	[DISK_LIST + freeb] = 1;
	
	// Storing FAT and DFL back to XFS
	store(5, 19);
	store(6, 20);
	
	// Return
	[physicalSP - 2] = 0;
	ireturn;
	
endif;

// Setting -1 since other sys calls haven't been implemented yet
[physicalSP - 2] = -1;

ireturn;
