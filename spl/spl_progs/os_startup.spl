// Loading Exection Handler into memory
load (7, 1);
load (8, 2);

// Loading INT 7 from XFS to Memory 
load (23, 17);
load (24, 18);

 // Setting PID 0 entry 
[READY_LIST + 0] = 0;

// Loading the INIT Program Code into Memory
load(25, 21);
load(26, 22); 
load(27, 23);

// Setting Page Table Base and Length Registers
PTBR = 1024; 
PTLR = 4;

// Setting up Page Table Entry for PID 0
[PTBR + 0] = 25;
[PTBR + 1] = "01";
[PTBR + 2] = 26;
[PTBR + 3] = "01"; 
[PTBR + 4] = 27;
[PTBR + 5] = "01";
[PTBR + 6] = 28;
[PTBR + 7] = "01";

// Changing PID 0 STATE to Running
[READY_LIST + 1] = 2;

// Setting Stack Pointer to the Logical address to Page 3 i.e. Stack.
SP = 3 * 512; 

// Setting up the INIT Value in the stack 
[28 * 512] = 0;

// Invalidating Per-Process Page Table for INIT Process
alias i S0;
i = 0;
while (i < 8) do
    //Invalidating Index to System Page Table to -1
    [READY_LIST + 15 + i * 2] = -1;
    //Invalidating LSEEK position to -1
    [READY_LIST + 16 + i * 2] = -1;
    
    i = i + 1;
endwhile;

// Loading INT 1 from XFS to Memory 
load (11, 5);
load (12, 6);

// INT 2
load (13, 7);
load (14, 8);

// INT 3
load (15,  9);
load (16, 10);

// INT 4
load (17, 11);
load (18, 12);

// Loading Timer INT from XFS to Memory
// load (9, 3);
// load (10, 4);

// Loading the FAT and Disk Free List into the Memory
load (5, 19);
load (6, 20);

//Invalidate System wide Open File Table
i = 0;

while (i < 64) do
    //Invalidating Index to FAT Table
    [FILE_TABLE + i * 2] = -1;
    //Invalidating File Open Count
    [FILE_TABLE + i * 2 + 1] = 0;
    
    i = i + 1;
endwhile;

ireturn; 
